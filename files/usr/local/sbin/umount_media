#!/bin/bash
#
# Unmounts media folders for Plex
#

# Script variables
export HOME=/etc/plex
MEDIA_CONF_DIR=/etc/plex/media.d

##
# Check common media config
##
function check_common {
    if [ "${mountPoint}" == "" ]; then
        echo "  ERROR: 'mountPoint' is not defined."
        echo
        return 100
    fi
    if [ "${encrypt}" == "1" ]; then
        if [ "${encfsMountPoint}" == "" ]; then
            echo "  ERROR: 'encfsMountPoint' is not defined."
            echo
            return 100
        fi
        if [ "${encfsXmlFile}" == "" ]; then
            echo "  ERROR: 'encfsXmlFile' is not defined."
            echo
            return 100
        fi
        if [ ! -f "${encfsXmlFile}" ]; then
            echo "  ERROR: encfs XML config file '${encfsXmlFile}' does not exist or is not readable."
            echo
            return 100
        fi 
        if [ "${encfsPassFile}" == "" ]; then
            echo "  ERROR: 'encfsPassFile' is not defined."
            echo
            return 100
        fi
        if [ ! -f "${encfsPassFile}" ]; then
            echo "  ERROR: encfs password file '${encfsPassFile}' does not exist or is not readable."
            echo
        fi
    fi
}

##
# Check local media config
##
function check_local {
    check_common
}

##
# Mount local media
##
function umount_local {
    if [ "${encrypt}" == "1" ]; then
        echo "  > fusermount -u '${mountPoint}'"
        fusermount -u "${mountPoint}"
    fi
    echo "  -- Done"
    echo
}

##
# Check Amazon Cloud Drive media config
##
function check_acd {
    check_common
}

##
# Mount Amazon Cloud Drive media
##
function umount_acd {
    if [ "${encrypt}" == "1" ]; then
        echo "  > fusermount -u '${mountPoint}'"
        fusermount -u "${mountPoint}"
    fi
    echo "  > acd_cli sync"
    acd_cli sync
    echo "  > acd_cli umount '${encfsMountPoint}'"
    acd_cli umount ${encfsMountPoint}
    echo "  -- Done"
    echo
}

# Parse media configuration files
for c in $(find ${MEDIA_CONF_DIR} -name \*.conf); do
    . $c
    echo "Checking config: $c"
    if [ "${type}" == "local" ]; then
       check_local
    elif [ "${type}" == "acd" ]; then
       check_acd
    else
       echo "  ERROR: 'type' must be one of the following: local | acd"
       echo
       exit 100
    fi
    echo "Mounting media folder: $mountPath"
    eval "umount_${type}"
done

